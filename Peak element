Java Code

class Solution {

    public int peakElement(int[] arr) {
       int n = arr.length;

    // If array has only one element, it's the peak
    if (n == 1) {
        return 0;
    }

    // Check if the first element is a peak
    if (arr[0] >= arr[1]) {
        return 0;
    }

    // Check for peak in the middle
    for (int i = 1; i < n - 1; i++) {
        if (arr[i] >= arr[i - 1] && arr[i] >= arr[i + 1]) {
            return i;
        }
    }

    // Check if the last element is a peak
    if (arr[n - 1] >= arr[n - 2]) {
        return n - 1;
    }

    return -1; // No peak found (should not happen for valid input)
    }
}

JavaScript Code

class Solution {
    peakElement(arr) {
        // Code here
        let n = arr.length;
        
        if(n == 1){
            return 0;
        }
        
        if(arr[0] >= arr[1]){
            return 0;
        }
        
        for(let i = 1;  i < n-1; i++){
            if(arr[i] >= arr[i-1] && arr[i] >= arr[i+1]){
                return i;
            }
        }
        
        if(arr[n-1] >= arr[n-2]){
            return n-1;
        }
        
        return -1;
    }
}
